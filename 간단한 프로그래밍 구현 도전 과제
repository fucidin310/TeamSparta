#include <iostream>
#include <functional>
using namespace std;

void Merge(int arr[], int left, int mid, int right, function<bool(int, int)> comp) {
	int* tempArr = new int[right - left];

	int firstPointer = left;
	int secondPointer = mid + 1;
	int tempIndex = 0;

	while (firstPointer <= mid && secondPointer <= right)
	{
		if (comp(arr[firstPointer], arr[secondPointer])) {
			tempArr[tempIndex] = arr[firstPointer];
			firstPointer++;
		}
		else {
			tempArr[tempIndex] = arr[secondPointer];
			secondPointer++;
		}

		tempIndex++;
	}

	while (firstPointer <= mid)
	{
		tempArr[tempIndex] = arr[firstPointer];
		firstPointer++;
		tempIndex++;
	}

	while (secondPointer <= right)
	{
		tempArr[tempIndex] = arr[secondPointer];
		secondPointer++;
		tempIndex++;
	}

	int k = 0;
	for (int i = left; i <= right; i++) {
		arr[i] = tempArr[k];
		k++;
	}
}

void MergeSort(int arr[], int start, int end, function<bool(int, int)> comp) {
	if (start >= end) return;

	int mid = start + (end - start) / 2;

	MergeSort(arr, start, mid, comp);
	MergeSort(arr, mid + 1, end, comp);

	Merge(arr, start, mid, end, comp);
}

int main() {	
	const int arrSize = 5;

	int Num[arrSize];

	cout << "숫자를 입력하세요 : ";
	for (int i = 0; i < arrSize; i++) {
		cin >> Num[i];
	}

	MergeSort(Num, 0, 4, less<int>());

	cout << "\n오름차순 정렬 : ";
	for (int i = 0; i < arrSize; i++) {
		cout << Num[i] << " ";
	}
	cout << endl;

	MergeSort(Num, 0, 4, greater<int>());

	cout << "\n내림차순 정렬 : ";
	for (int i = 0; i < arrSize; i++) {
		cout << Num[i] << " ";
	}
}
